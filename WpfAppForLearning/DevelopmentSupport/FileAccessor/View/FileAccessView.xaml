<UserControl x:Class="DevelopmentSupport.FileAccessor.View.FileAccessView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fileAccessVM="clr-namespace:DevelopmentSupport.FileAccessor.ViewModel"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary Source="./Styles/ListBoxResourceDictionary.xaml"/>
	</UserControl.Resources>
	<UserControl.DataContext>
		<fileAccessVM:FileAccessViewModel/>
	</UserControl.DataContext>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*"/>
			<ColumnDefinition Width="1*"/>
		</Grid.ColumnDefinitions>
		<Grid Grid.Column="0" VerticalAlignment="center" Margin="10,10" Background="White">
			<TextBlock Name="WatermarkTextBox" VerticalAlignment="Center" HorizontalAlignment="Center"
					   Text="ファイルまたはフォルダをD&amp;Dで登録してください。" Foreground="Gray"
					   Visibility="{Binding Path=HasItem, Converter={StaticResource ReverseBoolToVisibilityConverter}, Mode=OneWay}"/>
		</Grid>
		<ListBox Grid.Column="0" VerticalAlignment="Top" Margin="10,10" Background="Transparent"
                 ItemsSource="{Binding DisplayFileInfoList}"
				 SelectedItem="{Binding SelectedFileInfo}"
				 ScrollViewer.CanContentScroll="True"
				 ScrollViewer.VerticalScrollBarVisibility="Auto"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinHeight="440"
				 Drop="UserControl_Drop" PreviewDragOver="UserControl_PreviewDragOver" AllowDrop="True"
				 ItemTemplate="{StaticResource SmallIconItemDateTemplate}"
				 ItemsPanel="{StaticResource VirticalVirtualizingStackPanelItemsTemplate}">
			<ListBox.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<MenuItem Header="パスをコピー"
										  Command="{Binding TextCopyCommand}" />
								<MenuItem Header="削除"
										  Command="{Binding PlacementTarget.Tag.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
								<MenuItem Header="ファイルの場所をエクスプローラで開く"
										  Command="{Binding OpenFilePlacementFolderCommand}"/>
								<MenuItem Header="ブラウザを指定してリンクを開く"
										  ItemsSource="{Binding PlacementTarget.Tag.BrowserList, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  Visibility="{Binding IsLink, Converter={StaticResource BoolToVisivilityConverter}}">
									<MenuItem.ItemContainerStyle>
										<Style TargetType="MenuItem">
											<Setter Property="Header" Value="{Binding Path=Name}"/>
											<Setter Property="Command" Value="{Binding PlacementTarget.Tag.OpenLinkBySelectedAppCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
											<Setter Property="CommandParameter" Value="{Binding}"/>
										</Style>
									</MenuItem.ItemContainerStyle>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>
		<StackPanel Grid.Column="1" Margin="0,10,10,10">
			<Button Content="前へ" Command="{Binding ChangeItemOrderUpperCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素の順番をひとつ前へ移動します。"/>
			<Button Content="次へ" Command="{Binding ChangeItemOrderLowerCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素の順番をひとつ次へ移動します。"/>
			<Button Content="追加" Command="{Binding RemoveItemCommand}" Margin="0,0,0,5" IsEnabled="False"
					ToolTip="フォルダまたはファイルをリストに追加します。" Visibility="Collapsed"/>
			<Button Content="削除" Command="{Binding RemoveItemCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素をリストから削除します。"/>
			<Button Content="開始" Command="{Binding ProcessStartCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素を既定のプログラムで実行します。"/>
			<Button Content="終了" Command="{Binding ProcessCloseCommand}" Margin="0,0,0,10"
					ToolTip="選択中の要素のプロセスを終了します。" Visibility="Collapsed"/>
			<TextBlock Text="◇拡張子フィルタ"/>
			<ComboBox Name="m_ExtensionComboBox" Margin="0,0,0,5" 
					  ItemsSource="{Binding ExtensionList}" DisplayMemberPath="DisplayName"
					  SelectedIndex="0" ToolTip="選択した拡張子でフィルタします。">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<i:InvokeCommandAction Command="{Binding FilterByExtensionCommand}" CommandParameter="{Binding ElementName=m_ExtensionComboBox, Path=SelectedValue.Name}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>
			<TextBlock Text="◇キーワードフィルタ"/>
			<TextBox  Name="m_KeywordFilterTextBox">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="KeyUp">
						<i:InvokeCommandAction Command="{Binding FilterByKeywordCommand}" CommandParameter="{Binding ElementName=m_KeywordFilterTextBox, Path=Text}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</TextBox>
		</StackPanel>

	</Grid>
</UserControl>
