<UserControl x:Class="DevelopmentSupport.FileAccessor.FileAccessView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DevelopmentSupport.FileAccessor"
			 xmlns:commonConverter="clr-namespace:DevelopmentSupport.Common.Converters"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d"
			 Name="m_FileAccessViewUserControl">
	<UserControl.Resources>
		
		<!--コンバータ-->
		<commonConverter:BoolToVisivilityConverter x:Key="BoolToVisivilityConverter"/>
		<commonConverter:ReverseBoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter"/>

		<DataTemplate x:Key="MiddleIconItemDataTemplate">
			<ContentControl Width="80" VerticalAlignment="Top" ToolTip="{Binding FilePath}">
				<StackPanel>
					<Image Source="{Binding Icon}" Width="32" Height="32" HorizontalAlignment="Center" Margin="0,0,0,5"/>
					<TextBox Text="{Binding FileName}" TextWrapping="Wrap" HorizontalAlignment="Center"/>
				</StackPanel>
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDoubleClick">
						<ei:CallMethodAction 
                                    TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext}" 
                                    MethodName="Execute"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ContentControl>
		</DataTemplate>

		<!--横方向にリスト要素を列挙表示し右端で折り返す-->
		<ItemsPanelTemplate x:Key="HorizontalOrientationItemsPanelTemplate">
			<WrapPanel Orientation="Horizontal"/>
		</ItemsPanelTemplate>

		<!--縦方向にリスト要素を列挙し表示範囲外の要素を仮想化する-->
		<ItemsPanelTemplate x:Key="VirticalVirtualizingStackPanelItemsTemplate">
			<VirtualizingStackPanel/>
		</ItemsPanelTemplate>

		<DataTemplate x:Key="SmallIconItemDateTemplate">
			<ContentControl VerticalAlignment="Top" ToolTip="{Binding FilePath}">
				<Border HorizontalAlignment="Stretch" Background="Transparent">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Image Source="{Binding Icon}" Width="16" Height="16" HorizontalAlignment="Center" Margin="0,0,4,0"/>
						<TextBox Grid.Column="1" Text="{Binding FileName}" HorizontalAlignment="Left"/>
					</Grid>
				</Border>
				<!--
				<StackPanel Orientation="Horizontal">
					<Image Source="{Binding Icon}" Width="16" Height="16" HorizontalAlignment="Center"/>
					<TextBox Text="{Binding FileName}" HorizontalAlignment="Center"/>
				</StackPanel>
				-->
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDoubleClick">
						<ei:CallMethodAction 
                                    TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext}" 
                                    MethodName="Execute"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ContentControl>
		</DataTemplate>
	</UserControl.Resources>
	<UserControl.DataContext>
		<local:FileAccessViewModel/>
	</UserControl.DataContext>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*"/>
			<ColumnDefinition Width="1*"/>
		</Grid.ColumnDefinitions>
		<Grid Grid.Column="0" Height="400" VerticalAlignment="Top" Margin="10,10" Background="White">
			<TextBlock Name="WatermarkTextBox" VerticalAlignment="Center" HorizontalAlignment="Center"
					   Text="ファイルまたはフォルダをD&amp;Dで登録してください。" Foreground="Gray"
					   Visibility="{Binding Path=HasItem, Converter={StaticResource ReverseBoolToVisibilityConverter}, Mode=OneWay}"/>
		</Grid>
		<ListBox Grid.Column="0" VerticalAlignment="Top" Margin="10,10" Background="Transparent"
                 ItemsSource="{Binding DisplayFileInfoList}"
				 SelectedItem="{Binding SelectedFileInfo}"
				 ScrollViewer.CanContentScroll="True"
				 ScrollViewer.VerticalScrollBarVisibility="Auto"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Height="400"
				 Drop="UserControl_Drop" PreviewDragOver="UserControl_PreviewDragOver" AllowDrop="True"
				 ItemTemplate="{StaticResource SmallIconItemDateTemplate}"
				 ItemsPanel="{StaticResource VirticalVirtualizingStackPanelItemsTemplate}">
			<ListBox.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<MenuItem Header="パスをコピー"
										  Command="{Binding PlacementTarget.Tag.TextCopyCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
								<MenuItem Header="削除"
										  Command="{Binding PlacementTarget.Tag.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
								<MenuItem Header="ファイルの場所をエクスプローラで開く"
										  Command="{Binding PlacementTarget.Tag.OpenFilePlacementFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
								<MenuItem Header="ブラウザを指定してリンクを開く"
										  ItemsSource="{Binding  PlacementTarget.Tag.BrowserList, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
									<MenuItem.ItemContainerStyle>
										<Style TargetType="MenuItem">
											<Setter Property="Header" Value="{Binding Path=Name}"/>
											<Setter Property="Command" Value="{Binding PlacementTarget.Tag.OpenLinkBySelectedAppCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
											<Setter Property="CommandParameter" Value="{Binding}"/>
										</Style>
									</MenuItem.ItemContainerStyle>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>
		<StackPanel Grid.Column="1" Margin="0,10,10,10">
			<Button Content="前へ" Command="{Binding ChangeItemOrderUpperCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素の順番をひとつ前に移動します。"/>
			<Button Content="後へ" Command="{Binding ChangeItemOrderLowerCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素の順番をひとつ後に移動します。"/>
			<Button Content="追加" Command="{Binding RemoveItemCommand}" Margin="0,0,0,5" IsEnabled="False"
					ToolTip="フォルダまたはファイルをリストに追加します。" Visibility="Collapsed"/>
			<Button Content="削除" Command="{Binding RemoveItemCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素をリストから削除します。"/>
			<Button Content="開始" Command="{Binding ProcessStartCommand}" Margin="0,0,0,5"
					ToolTip="選択中の要素を既定のプログラムで実行します。"/>
			<Button Content="終了" Command="{Binding ProcessCloseCommand}" Margin="0,0,0,10"
					ToolTip="選択中の要素のプロセスを終了します。" Visibility="Collapsed"/>
			<TextBlock Text="拡張子フィルタ"/>
			<ComboBox Name="m_ExtensionComboBox" Margin="0,0,0,5" 
					  ItemsSource="{Binding ExtensionList}" DisplayMemberPath="DisplayName"
					  SelectedIndex="0" ToolTip="選択した拡張子でフィルタします。">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<i:InvokeCommandAction Command="{Binding FilterByExtensionCommand}" CommandParameter="{Binding ElementName=m_ExtensionComboBox, Path=SelectedValue.Name}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>
			<TextBlock Text="キーワードフィルタ"/>
			<TextBox  Name="m_KeywordFilterTextBox">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="KeyUp">
						<i:InvokeCommandAction Command="{Binding FilterByKeywordCommand}" CommandParameter="{Binding ElementName=m_KeywordFilterTextBox, Path=Text}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</TextBox>
		</StackPanel>

	</Grid>
</UserControl>
