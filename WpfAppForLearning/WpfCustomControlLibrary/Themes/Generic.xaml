<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="clr-namespace:WpfCustomControlLibrary.Ribbon">

    <Style TargetType="{x:Type ribbon:RibbonButton}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxWidth" Value="100"/>
        <Setter Property="MinWidth" Value="36"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonButton}">
                    <Grid Name="m_StackPanel" Background="Transparent" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Image HorizontalAlignment="Center" Width="32" Height="32" Margin="2" Stretch="UniformToFill"
                               Source="{Binding ImageSource, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonButton}}"/>
                        <TextBlock Grid.Row="1" Margin="2,0"
                                   HorizontalAlignment="Center"
                                   Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonButton}}"
                                   TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="m_StackPanel" Property="Background" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ribbon:RibbonGroup}">
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonGroup}">
                    <Border BorderBrush="Gray" BorderThickness="0,0,1,0" Margin="0,2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter Margin="2,0" Width="Auto" Content="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonGroup}}"/>
                            </StackPanel>
                            <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                       Text="{Binding Header, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonGroup}}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ribbon:RibbonTabItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonTabItem}">
                    <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonTabItem}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ribbon:RibbonToggleButton}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxWidth" Value="100"/>
        <Setter Property="MinWidth" Value="36"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                    <Grid Name="m_StackPanel" Background="Transparent" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Image Name="m_Image"  HorizontalAlignment="Center" Width="32" Height="32" Margin="2" Stretch="UniformToFill"
                               
                               Source="{Binding ImageSource, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonToggleButton}}"/>
                        <TextBlock Name="m_TextBlock"  Grid.Row="1" Margin="2,0"
                                   HorizontalAlignment="Center"
                                   Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ribbon:RibbonToggleButton}}"
                                   TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="m_StackPanel" Property="Background" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="m_StackPanel" Property="Background" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="m_TextBlock" Property="Foreground" Value="LightGray"/>
                            <Setter TargetName="m_Image" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
